<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace必须指向Dao接口 -->
<mapper namespace="com.jason.mybatis.dao.UserDao">

	<!--
		获取用户: 输出直接映射到对象, login_name列要"as loginName"以方便映射 ,team_id as "team.id"创建team对象并赋值
	-->
	<select id="get" parameterType="int" resultType="User">
		select id, name, email,
		department_code as departmentCode,
		login_name as loginName,
		password as password,
        nick_name as nickName,
        age as age,
        gender as gender,
        qq as qq,
        msn as msn,
        tel as tel,
        mobile as mobile,
        address as address,
        zip_code as zipCode,
        login_time as loginTime,
        created_time as createdTime,
        created_by as createdBy,
        modified_time as modifiedTime,
        modified_by as modifiedBy,
        status as status
		from sys_users
		where id=#{id} and status = 1
	</select>

	<!-- 查询用户,演示: 1.输入用map传入多个参数 2.<where>语句, 智能添加where和and关键字 3.输出直接映射对象 -->
	<select id="list" parameterType="map" resultType="User">
		select id, name, email,
        department_code as departmentCode,
        login_name as loginName,
        password as password,
        nick_name as nickName,
        age as age,
        gender as gender,
        qq as qq,
        msn as msn,
        tel as tel,
        mobile as mobile,
        address as address,
        zip_code as zipCode,
        login_time as loginTime,
        created_time as createdTime,
        created_by as createdBy,
        modified_time as modifiedTime,
        modified_by as modifiedBy,
        status as status
        from sys_users
		<where>
			<if test="loginName != null and loginName != ''" >
				login_name=#{loginName}
			</if>
			<if test="email != null and email != ''">
				and email=#{email}
			</if>
		</where>
	</select>

    <!-- 查询用户,演示: 1.输入用map传入多个参数 2.<where>语句, 智能添加where和and关键字 3.输出直接映射对象 -->
    <!--
    <select id="pageList" parameterType="userModel" resultType="User">
        select id, name, email,
        department_code as departmentCode,
        login_name as loginName,
        password as password,
        nick_name as nickName,
        age as age,
        gender as gender,
        qq as qq,
        msn as msn,
        tel as tel,
        mobile as mobile,
        address as address,
        zip_code as zipCode,
        login_time as loginTime,
        created_time as createdTime,
        created_by as createdBy,
        modified_time as modifiedTime,
        modified_by as modifiedBy,
        status as status
        from sys_users
        where status = 1
        <if test="loginName != null and loginName != ''" >
            and login_name=#{loginName}
        </if>
        <if test="email != null and email != ''">
            and email=#{email}
        </if>
        <if test="beginIndex!=null and pageSize!=null">
            limit #{beginIndex},#{pageSize}
        </if>
    </select>
    -->

    <!-- 获取用户总数 状态是个列表 -->
    <!--
    <select id="listCount" parameterType="userModel" resultType="int">
        SELECT
        count(1)
        FROM sys_users
        where status = 1
        <if test="loginName != null and loginName != ''" >
            and login_name=#{loginName}
        </if>
        <if test="email != null and email != ''">
            and email=#{email}
        </if>
    </select>
    -->

	<!-- 插入用户： 1.由数据库生成id并赋值到user对象 2.输入用对象, 嵌套属性表达式#{team.id} -->
	<insert id="save" parameterType="User" useGeneratedKeys="true" keyProperty="id">
		insert into sys_users (
		name, email,
		department_code,
		login_name,
		password,
        nick_name,
        age,
        gender,
        qq,
        msn,
        tel,
        mobile,
        address,
        zip_code,
        login_time,
        created_time,
        created_by,
        modified_time,
        modified_by)
		values (
		 #{name},
		 #{email},
		 #{departmentCode},
		 #{loginName},
		 #{password},
		 #{nickName},
         #{age},
         #{gender},
         #{qq},
         #{msn},
         #{tel},
         #{mobile},
         #{address},
         #{zipCode},
         #{loginTime},
         #{createdTime},
         #{createdBy},
         #{modifiedTime},
         #{modifiedBy})
	</insert>

    <!-- update -->
    <update id="update"  parameterType="User" >
        update sys_users
        set
          name = #{name}
          <if test="loginName != null">
            , login_name=#{loginName}
          </if>
          <if test="password != null">
            , password=#{password}
          </if>
          <if test="email != null">
            , email=#{email}
          </if>
        where id = #{id}
    </update>

    <!-- remove -->
    <update id="remove"  parameterType="User" >
        update sys_users set status = 0 where id = #{id}
    </update>
	
	<!-- 删除用户 -->
	<delete id="delete" parameterType="int">
	     delete from sys_users where id=#{id}
	</delete>
</mapper> 
